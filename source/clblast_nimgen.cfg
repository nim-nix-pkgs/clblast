[n.global]
# Note: Nimgen requires that to be the same as the package name
# Warning: Nimgen deletes and recreate the output directory from scratch
# For clblast, it is moved under src/generated after nimgen generation.
output = clblast

[n.include]
clblast
clblast/include

[n.prepare]
gitremote = "https://github.com/CNugteren/CLBlast.git"
gitsparse = """
include/*
"""

[clblast_c.h]
preprocess = true
defines = true

dynlib.win = clblast.dll
dynlib.lin = libclblast.so
dynlib.osx = libclblast.dylib

[clblast_c.h]
preprocess = true
defines = true

dynlib.win = clblast.dll
dynlib.lin = libclblast.so
dynlib.osx = libclblast.dylib

[clblast_c.nim]
prepend = """
import opencl
import ./clblast_half

type
  cl_float2* = array[2, cfloat]
  cl_double2* = array[2, cdouble]
  cl_half* = half
"""

# Nimgen adds these unneeded lines. Deletion have to be done line by line somehow.
search.no_include1 = "import strutils"
replace.no_include1 = ""
search.no_include2 = """{.passC: "-I\"" & gorge("nimble path clblast").strip() & "/clblast\"".}"""
replace.no_include2 = ""
search.no_include3 = """{.passC: "-I\"" & gorge("nimble path clblast").strip() & "/clblast/include\"".}"""
replace.no_include3 = ""

# Strangely those shouldbe pointer but are not
search.mem = "cl_mem"
replace.mem = "Pmem"
search.device = "cl_device_id"
replace.device = "Pdevice_id"

# Conforming with Nim OpenCL API
# https://github.com/nim-lang/opencl/blob/master/src/opencl.nim
search.comqueue = "ptr cl_command_queue"
replace.comqueue = "ptr Pcommand_queue"
search.event = "ptr cl_event"
replace.event = "ptr Pevent"

# Remove Hadamard product which is not in last release/package managers
search.hadamard = """
proc CLBlastShad*(n: csize; alpha: cfloat; x_buffer: Pmem; x_offset: csize;
                 x_inc: csize; y_buffer: Pmem; y_offset: csize; y_inc: csize;
                 beta: cfloat; z_buffer: Pmem; z_offset: csize; z_inc: csize;
                 queue: ptr Pcommand_queue; event: ptr Pevent): CLBlastStatusCode {.
    stdcall, importc: "CLBlastShad", dynlib: dynlibclblast_c.}
proc CLBlastDhad*(n: csize; alpha: cdouble; x_buffer: Pmem; x_offset: csize;
                 x_inc: csize; y_buffer: Pmem; y_offset: csize; y_inc: csize;
                 beta: cdouble; z_buffer: Pmem; z_offset: csize; z_inc: csize;
                 queue: ptr Pcommand_queue; event: ptr Pevent): CLBlastStatusCode {.
    stdcall, importc: "CLBlastDhad", dynlib: dynlibclblast_c.}
proc CLBlastChad*(n: csize; alpha: cl_float2; x_buffer: Pmem; x_offset: csize;
                 x_inc: csize; y_buffer: Pmem; y_offset: csize; y_inc: csize;
                 beta: cl_float2; z_buffer: Pmem; z_offset: csize; z_inc: csize;
                 queue: ptr Pcommand_queue; event: ptr Pevent): CLBlastStatusCode {.
    stdcall, importc: "CLBlastChad", dynlib: dynlibclblast_c.}
proc CLBlastZhad*(n: csize; alpha: cl_double2; x_buffer: Pmem; x_offset: csize;
                 x_inc: csize; y_buffer: Pmem; y_offset: csize; y_inc: csize;
                 beta: cl_double2; z_buffer: Pmem; z_offset: csize; z_inc: csize;
                 queue: ptr Pcommand_queue; event: ptr Pevent): CLBlastStatusCode {.
    stdcall, importc: "CLBlastZhad", dynlib: dynlibclblast_c.}
proc CLBlastHhad*(n: csize; alpha: cl_half; x_buffer: Pmem; x_offset: csize;
                 x_inc: csize; y_buffer: Pmem; y_offset: csize; y_inc: csize;
                 beta: cl_half; z_buffer: Pmem; z_offset: csize; z_inc: csize;
                 queue: ptr Pcommand_queue; event: ptr Pevent): CLBlastStatusCode {.
    stdcall, importc: "CLBlastHhad", dynlib: dynlibclblast_c.}
"""
replace.hadamard = ""

search.lowercase = "proc CLBlast"
replace.lowercase = "proc clblast"

[clblast_half.h]
preprocess = true
defines = true

[clblast_half.nim]
# Nimgen adds these unneeded lines
search.no_include1 = "import strutils"
replace.no_include1 = ""
search.no_include2 = """{.passC: "-I\"" & gorge("nimble path clblast").strip() & "/clblast\"".}"""
replace.no_include2 = ""
search.no_include3 = """{.passC: "-I\"" & gorge("nimble path clblast").strip() & "/clblast/include\"".}"""
replace.no_include3 = ""

[clblast_netlib_c.h]
preprocess = true
defines = true

dynlib.win = clblast.dll
dynlib.lin = libclblast.so
dynlib.osx = libclblast.dylib

[clblast_netlib_c.nim]
# Nimgen adds these unneeded lines
search.no_include1 = "import strutils"
replace.no_include1 = ""
search.no_include2 = """{.passC: "-I\"" & gorge("nimble path clblast").strip() & "/clblast\"".}"""
replace.no_include2 = ""
search.no_include3 = """{.passC: "-I\"" & gorge("nimble path clblast").strip() & "/clblast/include\"".}"""
replace.no_include3 = ""

## Missing in last release (as of Feb 2018)
search.no_sum = """
proc cblas_ssum*(n: cint; x: ptr cfloat; x_inc: cint): cfloat {.stdcall,
    importc: "cblas_ssum", dynlib: dynlibclblast_netlib_c.}
proc cblas_dsum*(n: cint; x: ptr cdouble; x_inc: cint): cdouble {.stdcall,
    importc: "cblas_dsum", dynlib: dynlibclblast_netlib_c.}
"""